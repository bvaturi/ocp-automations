---
- name: Generate Run.sh with skopeo commands
  shell: cat images.txt | awk '{print "skopeo copy --all --src-tls-verify=false --dest-tls-verify=false --authfile=/run/containers/0/auth.json docker://"$1" docker://myregistry:5000/"$1}' | sed 's,myregistry:5000/[^/]*,myregistry:5000,g' >> run.sh

- name: chmod run.sh
  file:
    path: run.sh
    mode: u+rx,g+rx,o+rx


- name: Add index image for the operator
  shell: "/usr/local/bin/opm index prune -f registry.redhat.io/redhat/{{index_image}}-index:{{index_image_version}} -p {{ latest_bundle.stdout.split('.')[0] }} -t myregistry:5000/{{ latest_bundle.stdout.split('.')[0] }}-index:{{ latest_bundle.stdout | regex_replace('^.*?\\.') }}; podman push --tls-verify=false --authfile=/run/containers/0/auth.json myregistry:5000/{{ latest_bundle.stdout.split('.')[0] }}-index:{{ latest_bundle.stdout | regex_replace('^.*?\\.') }}"

- name: Add index image to run.sh
  shell: echo "skopeo copy --all --src-tls-verify=false --dest-tls-verify=false --authfile=/run/containers/0/auth.json docker://registry.redhat.io/redhat/{{index_image}}-index:{{index_image_version}} docker://myregistry:5000/{{ latest_bundle.stdout.split('.')[0] }}-index:{{ latest_bundle.stdout | regex_replace('^.*?\\.') }}" >> run.sh

- name: Run the script with the skopeo commands
  shell: sudo bash run.sh

- name: generate imageContentSourcePolicy.yaml file for the operator
  copy:
    dest: imageContentSourcePolicy.yaml
    content: |
      apiVersion: operator.openshift.io/v1alpha1
      kind: ImageContentSourcePolicy
      metadata:
        name: {{ required_operator }}
      spec:
        repositoryDigestMirrors:

- name: Add releavnt mirrors to imageContentSourcePolicy.yaml file
  shell: "cat images.txt | awk '{print \"  - mirrors:\\n    - REPLACE_ME/PATH/TO/REPO\\n    source: \"$1}' | awk -F'@' '{print $1}' >> imageContentSourcePolicy.yaml"
          
- name: "Copy 'run.sh', 'imageContentSourcePolicy.yaml' to '/tmp/myregistry/data' for later compressing all of it together"
  copy:
    src: "{{ item.src }}"
    dest: "{{item.dest}}"
  with_items:
    - {src: 'run.sh', dest: '/tmp/myregistry/data/run.sh'}
    - {src: 'imageContentSourcePolicy.yaml', dest: '/tmp/myregistry/data/imageContentSourcePolicy.yaml'}

- name: Compress directory /tmp/myregsitry/data
  community.general.archive:
    path: /tmp/myregistry/data
    dest: "{{ latest_bundle.stdout }}.tar.gz"
    format: gz
